<?php
// ЁЯУж р╣Вр╕лр╕ер╕Ф library р╕Чр╕╡р╣Ир╕Ир╕│р╣Ар╕Ыр╣Зр╕Щ (р╕Ьр╣Ир╕▓р╕Щ Composer)
require_once __DIR__ . '/vendor/autoload.php';

// ЁЯУб import classes р╕кр╕│р╕лр╕гр╕▒р╕Ъ MQTT
use PhpMqtt\Client\MqttClient;
use PhpMqtt\Client\ConnectionSettings;

/**
 * ЁЯФД р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╣Ир╕Зр╕Др╕│р╕кр╕▒р╣Ир╕Зр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕Кр╕╖р╣Ир╕нр╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣Мр╕Ьр╣Ир╕▓р╕Щ MQTT
 * @param string $deviceId - ID р╕Вр╕нр╕Зр╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣Мр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕Кр╕╖р╣Ир╕н
 */
function sendRenameCommand($deviceId) {
    // ЁЯМР р╕Бр╕▓р╕гр╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓ MQTT Server
    $server = 'c08f12c863ea4fcea81ae1d7226bddab.s1.eu.hivemq.cloud'; // HiveMQ Cloud server
    $port = 8883;                                    // р╕Юр╕нр╕гр╣Мр╕Хр╕кр╕│р╕лр╕гр╕▒р╕Ъ TLS/SSL
    $clientId = 'php-client-' . uniqid();           // р╕кр╕гр╣Йр╕▓р╕З Client ID р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕Лр╣Йр╕│
    $username = 'test1';                            // р╕Кр╕╖р╣Ир╕нр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й
    $password = 'Test12345';                        // р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
    
    // ЁЯФР р╣Др╕Яр╕ер╣М Certificate р╕кр╕│р╕лр╕гр╕▒р╕Ъ TLS/SSL
    $caFile = __DIR__ . '/../../../certs/hivemq-com-chain.pem';
    
    // ЁЯУи р╕Бр╕│р╕лр╕Щр╕Ф Topic р╣Бр╕ер╕░ Message
    $topic = "esp32/$deviceId/rename";              // Topic р╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╣Ир╕Зр╕Др╕│р╕кр╕▒р╣Ир╕З
    $message = json_encode([                        // р╣Бр╕Ыр╕ер╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕Ыр╣Зр╕Щ JSON
        "new_name" => $deviceId
    ]);
    
    try {
        // тЪЩя╕П р╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н
        $connectionSettings = (new ConnectionSettings)
            ->setUsername($username)                 // р╕Бр╕│р╕лр╕Щр╕Фр╕Кр╕╖р╣Ир╕нр╕Ьр╕╣р╣Йр╣Гр╕Кр╣Й
            ->setPassword($password)                 // р╕Бр╕│р╕лр╕Щр╕Фр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ
            ->setUseTls(true)                       // р╣Ар╕Ыр╕┤р╕Фр╣Гр╕Кр╣Й TLS/SSL
            ->setTlsCaFile($caFile)                 // р╕Бр╕│р╕лр╕Щр╕Фр╣Др╕Яр╕ер╣М Certificate
            ->setTlsVerifyPeer(true)                // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Certificate р╕Вр╕нр╕З Server
            ->setTlsVerifyPeerName(true);           // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Кр╕╖р╣Ир╕н Server
        
        // ЁЯФМ р╕кр╕гр╣Йр╕▓р╕Зр╣Бр╕ер╕░р╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н MQTT Client
        $mqtt = new MqttClient($server, $port, $clientId, MqttClient::MQTT_3_1_1);
        $mqtt->connect($connectionSettings, true);   // р╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕нр╣Бр╕Ър╕Ъ Clean Session
        
        // ЁЯУд р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б
        $mqtt->publish($topic, $message, MqttClient::QOS_AT_MOST_ONCE); // QoS 0
        
        // ЁЯФЪ р╕Хр╕▒р╕Фр╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н
        $mqtt->disconnect();
        
        // тЬЕ р╕Ър╕▒р╕Щр╕Чр╕╢р╕Б Log р╕кр╕│р╣Ар╕гр╣Зр╕И
        error_log("[MQTT] Sent rename to $deviceId");
        
    } catch (Throwable $e) {
        // тЭМ р╕Ър╕▒р╕Щр╕Чр╕╢р╕Б Log р╣Ар╕бр╕╖р╣Ир╕нр╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф
        error_log('[MQTT] Failed to publish: ' . $e->getMessage());
    }
}

// ЁЯТб р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ
// sendRenameCommand('ESP32_001');

/* 
ЁЯУЪ р╕Др╕│р╕нр╕Шр╕┤р╕Ър╕▓р╕вр╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕б:

ЁЯФ╕ MQTT р╕Др╕╖р╕нр╕нр╕░р╣Др╕г?
   - Message Queuing Telemetry Transport
   - р╣Вр╕Ыр╕гр╣Вр╕Хр╕Др╕нр╕ер╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕кр╕╖р╣Ир╕нр╕кр╕▓р╕гр╕гр╕░р╕лр╕зр╣Ир╕▓р╕Зр╕нр╕╕р╕Ыр╕Бр╕гр╕Ур╣М IoT
   - р╣Гр╕Кр╣Йр╕гр╕░р╕Ър╕Ъ Publisher/Subscriber

ЁЯФ╕ QoS Levels:
   - QoS 0: At most once (р╕кр╣Ир╕Зр╕Др╕гр╕▒р╣Йр╕Зр╣Ар╕Фр╕╡р╕вр╕з р╕нр╕▓р╕Ир╕лр╕▓р╕в)
   - QoS 1: At least once (р╕кр╣Ир╕Зр╕нр╕вр╣Ир╕▓р╕Зр╕Щр╣Йр╕нр╕вр╕Др╕гр╕▒р╣Йр╕Зр╣Ар╕Фр╕╡р╕вр╕з р╕нр╕▓р╕Ир╕Лр╣Йр╕│)
   - QoS 2: Exactly once (р╕кр╣Ир╕Зр╕Др╕гр╕▒р╣Йр╕Зр╣Ар╕Фр╕╡р╕вр╕зр╣Бр╕Щр╣Ир╕Щр╕нр╕Щ)

ЁЯФ╕ TLS/SSL:
   - р╣Ар╕Вр╣Йр╕▓р╕гр╕лр╕▒р╕кр╕Бр╕▓р╕гр╕кр╕╖р╣Ир╕нр╕кр╕▓р╕гр╣Ар╕Юр╕╖р╣Ир╕нр╕Др╕зр╕▓р╕бр╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕в
   - р╣Гр╕Кр╣Йр╕Юр╕нр╕гр╣Мр╕Х 8883 р╣Бр╕Чр╕Щ 1883

ЁЯФ╕ Topic Structure:
   - esp32/{deviceId}/rename
   - р╣Гр╕Кр╣Й / р╣Ар╕Ыр╣Зр╕Щ delimiter
   - р╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Гр╕Кр╣Й wildcard (* р╕лр╕гр╕╖р╕н #) р╣Др╕Фр╣Й

ЁЯФ╕ JSON Message Format:
   - {"new_name": "device_name"}
   - р╕Зр╣Ир╕▓р╕вр╕Хр╣Ир╕нр╕Бр╕▓р╕г parse р╕Эр╕▒р╣Ир╕Зр╕гр╕▒р╕Ъ
*/
?>